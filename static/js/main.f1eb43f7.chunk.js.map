{"version":3,"sources":["SimpleValue.js","ListValue.js","TraitValue.js","App.js","serviceWorker.js","index.js"],"names":["SimpleValue","props","className","this","title","contentEditable","text","React","Component","defaultProps","ListValue","fields","map","value","index","key","TraitValue","location","App","getRandomValue","data","Math","floor","random","length","spinTraits","characteristic","characteristics","race","gender","firstNameList","includes","names","replace","First","concat","Human","lastNameList","Last","firstName","lastName","name","age","height","hairStyle","hairColor","hairTexture","facialFeatures","positiveTrait","positiveTraits","neutralTrait","neutralTraits","negativeTrait","negativeTraits","alignment","accent","airiness","pitch","cadence","charLoc","hasLocation","bodyLocations","instinct","instincts","knack","knacks","respin","setState","state","description","hair","personalityFields","speechFields","type","onClick","personalityTraits","speech","traitsOptions","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1eb43f7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SimpleValue extends React.Component {\n    constructor(props) {\n        super(props);\n\t}\n\tstatic defaultProps = {\n\t\ttitle: 'TBD title',\n\t\ttext: 'TBD text'\n\t  };\n\n    render() {\n\t\treturn (\n\t\t\t<div className=\"simpleValue\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-xs-4 col-md-2 text-right\">\n\t\t\t\t\t\t<strong>{this.props.title}:&nbsp;</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div contentEditable className=\"col-xs-8 col-md-10\">\n\t\t\t\t\t\t{this.props.text}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n    }\n};\n\nSimpleValue.propTypes = {\n\ttitle: PropTypes.string,\n\tfields: PropTypes.string\n};\n\nexport default SimpleValue;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ListValue extends React.Component {\n    constructor(props) {\n        super(props);\n\t}\n\tstatic defaultProps = {\n\t\ttitle: 'TBD title',\n\t\tfields: [['title', 'text']]\n\t  };\n\n    render() {\n\t\treturn (\n\t\t\t<div className=\"simpleValue\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-xs-4 col-md-2 text-right\">\n\t\t\t\t\t\t<strong>{this.props.title}:&nbsp;</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"col-xs-8 col-md-10\">\n                        <dl>\n\t\t\t\t\t\t{this.props.fields.map((value, index) => {\n\t\t\t\t\t\t\treturn <dd contentEditable key={index}><strong>{value[0]}</strong>: {value[1]}</dd>\n      \t\t\t\t\t})}\n                        </dl>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n    }\n};\n\nListValue.propTypes = {\n\ttitle: PropTypes.string,\n\tfields: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n\nexport default ListValue;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TraitValue extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\tstatic defaultProps = {\n\t\ttitle: 'TBD title',\n\t\ttext: 'TBD text',\n\t\tlocation: ''  \n\t  };\n    render() {\n\n\t\tvar location = this.props.location ? '(location: ' + this.props.location + ')' : '';\n\n\t\treturn (\n\t\t\t<div className=\"simpleValue\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-xs-4 col-md-2 text-right\">\n\t\t\t\t\t\t<strong>{this.props.title}:&nbsp;</strong>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div contentEditable className=\"col-xs-8 col-md-10\">\n\t\t\t\t\t\t{this.props.text} <small>{location}</small>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n    }\n};\nTraitValue.propTypes = {\n\ttitle: PropTypes.string,\n\ttext: PropTypes.string,\n\tlocation: PropTypes.string\n};\n\nexport default TraitValue;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n// COMPONENTS\nimport SimpleValue from './SimpleValue.js';\nimport ListValue from './ListValue.js';\nimport TraitValue from './TraitValue.js';\n// DATA\nimport alignment from './alignment.json';\nimport hair from './hair.json';\nimport personalityTraits from './personalityTraits.json';\nimport names from './names.json';\nimport speech from './speech.json';\nimport traitsOptions from './traitsOptions.json';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.spinTraits();\n  }\n  static defaultProps = {\n    ...alignment,\n    ...hair,\n    ...names,\n    ...personalityTraits,\n    ...speech,\n    ...traitsOptions   \n  };\n\t/**\n\t * TODO Abstract to helper object?\n\t */\n\tgetRandomValue = (data) => \n\t\tdata[Math.floor(Math.random() * data.length)];\n\n  spinTraits = () => {\n\n    let characteristic = this.getRandomValue(this.props.characteristics);\n    let race = this.getRandomValue(this.props.race);\n    let gender = this.getRandomValue(this.props.gender);\n\n    // Combine lists for \"Half\" Species\n    let firstNameList = \n      race.includes(\"Half-\") \n        ? this.props.names[race.replace(\"Half-\",\"\")].First[gender].concat(this.props.names.Human.First[gender])\n        : this.props.names[race].First[gender];\n    let lastNameList = \n      race.includes(\"Half-\") \n        ? this.props.names[race.replace(\"Half-\",\"\")].Last.concat(this.props.names.Human.Last)\n        : this.props.names[race].Last;\n    let firstName = this.getRandomValue(firstNameList);\n    let lastName = this.getRandomValue(lastNameList);\n\n    return {\n      name: `${firstName} ${lastName}`,\n      gender: gender,\n      age: this.getRandomValue(this.props.age),\n      height: this.getRandomValue(this.props.height),\n      race: race,\n      hairStyle: this.getRandomValue(this.props.hairStyle),\n      hairColor: this.getRandomValue(this.props.hairColor),\n      hairTexture: this.getRandomValue(this.props.hairTexture),      \n      facialFeatures: this.getRandomValue(this.props.facialFeatures),\n      positiveTrait: this.getRandomValue(this.props.positiveTraits),\n      neutralTrait: this.getRandomValue(this.props.neutralTraits),\n      negativeTrait: this.getRandomValue(this.props.negativeTraits),\n      alignment: this.getRandomValue(this.props.alignment),\n      accent: this.getRandomValue(this.props.accent),\n      airiness: this.getRandomValue(this.props.airiness),\n      pitch: this.getRandomValue(this.props.pitch),\n      cadence: this.getRandomValue(this.props.cadence),\n      characteristic: characteristic,\n      charLoc: characteristic.hasLocation ? this.getRandomValue(this.props.bodyLocations) : null,\n      instinct: this.getRandomValue(this.props.instincts),\n      knack: this.getRandomValue(this.props.knacks)\n    }\n  } \n\n  respin = () => {this.setState(this.spinTraits())}\n\n  render() {\n    const { \n      accent,\n      alignment,\n      name, \n      gender, \n      race, \n      age,\n      hairColor,\n      hairStyle,\n      hairTexture, \n      height, \n      facialFeatures, \n      airiness, \n      cadence, \n      pitch,\n      characteristic, \n      charLoc, \n      positiveTrait, \n      neutralTrait,\n      negativeTrait,\n      instinct, \n      knack } = this.state;\n      let description = height + \" for an \" + age + \" \" + race;\n      let hair = `${hairStyle}, ${hairTexture}, ${hairColor} Hair`\n      let personalityFields = [\n        [\"Normal Behavior\", positiveTrait],\n        [\"Drunk or Tired\", neutralTrait],\n        [\"Angry or Stressed\", negativeTrait]\n      ];\n      let speechFields = [\n        [\"Accent\", accent],\n        [\"Pitch\", `${pitch} for a ${gender} ${race}`],\n        [\"Airiness\", airiness],\n        [\"Cadence\", cadence]\n      ];\n\n\t\treturn (\n\t\t\t<div className=\"container-fluid\">\n\n\t\t\t\t<div className=\"page-header\">\n  \t\t\t\t\t<h1>\n  \t\t\t\t\t\tNPC Spinner\n\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"row spacer\">\n\t\t\t\t\t<div className=\"col-xs-7 col-md-10 left\">\n\t\t\t\t\t\t<button type=\"button\" className=\"btn btn-primary\"\n\t\t\t\t\t\tonClick={this.respin}>Generate new traits</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n        <div className=\"row\">\n        <div className=\"col-xs-12\">\n          <div className=\"panel panel-info\">\n              <div className=\"panel-body\">\n              <h3>{name}</h3>\n              <SimpleValue title=\"Race\" text={race}/>\n              <SimpleValue title=\"Age\" text={age}/>\n              <SimpleValue title=\"Sex\" text={gender}/>\n              <SimpleValue title=\"Hair\" text={hair}/>\n              <SimpleValue title=\"Facial\" text={facialFeatures}/>\n              <SimpleValue title=\"Description\" text={description}/>\n              <SimpleValue title=\"Occupation\" text=\"\"/>\n\n              <br/>\n              <ListValue title=\"Speech\" fields={speechFields}/>\n              <SimpleValue title=\"Alignment\" text={alignment}/>\n              <SimpleValue title=\"Instinct\" text={instinct}/>\n              <TraitValue title=\"Characteristic\" text={characteristic.text} location={charLoc}/>\n              <SimpleValue title=\"Knack\" text={knack}/>\n              <ListValue title=\"Personality\" fields={personalityFields}/>\n              <div>&nbsp;</div>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n\t\t\t</div>\n\t\t);\n\n\t};\n};\n\n\n\nApp.propTypes = {\n  npcs: PropTypes.number,\n  maxNpcs: PropTypes.number,\n  names: PropTypes.arrayOf(PropTypes.string),\n  instincts: PropTypes.arrayOf(PropTypes.string),\n  knacks: PropTypes.arrayOf(PropTypes.string),\n  speech: PropTypes.arrayOf(PropTypes.string),\n  hairColor: PropTypes.arrayOf(PropTypes.string),\n  hairStyle: PropTypes.arrayOf(PropTypes.string),\n  hairTexture: PropTypes.arrayOf(PropTypes.string),\n  facialFeatures: PropTypes.arrayOf(PropTypes.string),\n  bodyLocations: PropTypes.arrayOf(PropTypes.string),\n  personality: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}