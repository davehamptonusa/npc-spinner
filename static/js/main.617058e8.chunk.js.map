{"version":3,"sources":["SimpleValue.js","ListValue.js","Utils.js","TraitList.js","App.js","serviceWorker.js","index.js"],"names":["SimpleValue","class","this","props","title","text","React","Component","defaultProps","ListValue","fields","map","value","index","contentEditable","key","getRandomValue","data","Math","floor","random","length","TraitList","location","hasLocation","bodyLocation","traitsOptions","bodyLocations","App","spinTraits","race","gender","firstNameList","includes","names","replace","First","concat","Human","lastNameList","Last","firstName","lastName","name","age","height","hairStyle","hairColor","hairTexture","facialFeatures","positiveTrait","positiveTraits","neutralTrait","neutralTraits","negativeTrait","negativeTraits","alignment","accent","airiness","pitch","cadence","characteristic1","characteristics","characteristic2","instinct","instincts","knack","knacks","respin","setState","state","description","hair","personalityFields","speechFields","characteristicFields","className","alt","src","Object","keys","type","onClick","personalityTraits","speech","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.617058e8.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass SimpleValue extends React.Component {\n\n\tstatic defaultProps = {\n\t\ttitle: 'TBD title',\n\t\ttext: 'TBD text'\n\t  };\n\n    render() {\n\t\treturn (\n\t\t\t<div class=\"mon-stat-block__attribute\">\n           \t\t<span class=\"mon-stat-block__attribute-label\">{this.props.title}: </span>\n            \t<span class=\"mon-stat-block__attribute-data\">\n\t\t\t\t\t<span class=\"mon-stat-block__attribute-data-value\">\n\t\t\t\t\t{this.props.text}    \n\t\t\t\t\t</span>\n            \t</span>\n        \t</div>\n\t\t);\n    }\n};\n\nSimpleValue.propTypes = {\n\ttitle: PropTypes.string,\n\tfields: PropTypes.string\n};\n\nexport default SimpleValue;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass ListValue extends React.Component {\n\n\tstatic defaultProps = {\n\t\ttitle: 'TBD title',\n\t\tfields: [['title', 'text']]\n\t  };\n\n    render() {\n\t\treturn (\n\t\t\t<div class=\"mon-stat-block__attribute\">\n\t\t\t\t<span class=\"mon-stat-block__attribute-label\">{this.props.title}: </span>\n\t\t\t\t<span class=\"mon-stat-block__attribute-data\">\n\t\t\t\t\t<span class=\"mon-stat-block__attribute-data-value\">\n\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t\t{this.props.fields.map((value, index) => {\n\t\t\t\t\t\t\t\t\treturn <dd contentEditable key={index}><strong>&nbsp;-&nbsp;{value[0]}</strong>: {value[1]}</dd>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</dl>\n\t\t\t\t\t\t</dl>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n    }\n};\n\nListValue.propTypes = {\n\ttitle: PropTypes.string,\n\tfields: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string))\n};\n\nexport default ListValue;","export function getRandomValue(data) {\n    return data[Math.floor(Math.random() * data.length)]\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport traitsOptions from './json/traitsOptions.json';\nimport { getRandomValue } from './Utils.js';\n\n\n\nclass TraitList extends React.Component {\n\n\tstatic defaultProps = {\n\t\ttitle: \"TBD Title\",\n\t\tfields: [{text: 'text', hasLocation: false}]\n\t  };\n\n    render() {\n\n\t\treturn (\n\t\t\t<div class=\"mon-stat-block__attribute\">\n\t\t\t\t<span class=\"mon-stat-block__attribute-label\">{this.props.title}: </span>\n\t\t\t\t<span class=\"mon-stat-block__attribute-data\">\n\t\t\t\t\t<span class=\"mon-stat-block__attribute-data-value\">\n\t\t\t\t\t\t<dl>\n\t\t\t\t\t\t\t{this.props.fields.map((value, index) => {\n\t\t\t\t\t\t\t\tlet location = '';\n\t\t\t\t\t\t\t\tif (value.hasLocation === true) {\n\t\t\t\t\t\t\t\t\tlet bodyLocation = getRandomValue(traitsOptions.bodyLocations);\n\t\t\t\t\t\t\t\t\tlocation = ` (location: ${bodyLocation})`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn <dd contentEditable key={index}>&nbsp;-&nbsp;{value.text}\n\t\t\t\t\t\t\t\t\t<small>{location}</small></dd>\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</dl>\n\t\t\t\t\t</span>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t);\n\n\n\n\n    }\n};\nTraitList.propTypes = {\n\ttitle: PropTypes.string,\n\tfields: PropTypes.arrayOf(PropTypes.object)\n};\n\nexport default TraitList;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\n// COMPONENTS\nimport SimpleValue from './SimpleValue.js';\nimport ListValue from './ListValue.js';\nimport TraitList from './TraitList.js';\n// DATA\nimport alignment from './json/alignment.json';\nimport hair from './json/hair.json';\nimport personalityTraits from './json/personalityTraits.json';\nimport names from './json/names.json';\nimport speech from './json/speech.json';\nimport traitsOptions from './json/traitsOptions.json';\n//\nimport { getRandomValue } from './Utils.js';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.spinTraits();\n  }\n  static defaultProps = {\n    ...alignment,\n    ...hair,\n    ...names,\n    ...personalityTraits,\n    ...speech,\n    ...traitsOptions   \n  };\n\t/**\n\t * TODO Abstract to helper object?\n\t */\n\n  spinTraits = () => {\n\n    let race = getRandomValue(this.props.race);\n    let gender = getRandomValue(this.props.gender);\n\n\n    // Combine lists for \"Half\" Species\n    let firstNameList = \n      race.includes(\"Half-\") \n        ? this.props.names[race.replace(\"Half-\",\"\")].First[gender].concat(this.props.names.Human.First[gender])\n        : this.props.names[race].First[gender];\n    let lastNameList = \n      race.includes(\"Half-\") \n        ? this.props.names[race.replace(\"Half-\",\"\")].Last.concat(this.props.names.Human.Last)\n        : this.props.names[race].Last;\n    let firstName = getRandomValue(firstNameList);\n    let lastName = getRandomValue(lastNameList);\n\n    return {\n      name: `${firstName} ${lastName}`,\n      gender: gender,\n      age: getRandomValue(this.props.age),\n      height: getRandomValue(this.props.height),\n      race: race,\n      hairStyle: getRandomValue(this.props.hairStyle),\n      hairColor: getRandomValue(this.props.hairColor),\n      hairTexture: getRandomValue(this.props.hairTexture),      \n      facialFeatures: getRandomValue(this.props.facialFeatures),\n      positiveTrait: getRandomValue(this.props.positiveTraits),\n      neutralTrait: getRandomValue(this.props.neutralTraits),\n      negativeTrait: getRandomValue(this.props.negativeTraits),\n      alignment: getRandomValue(this.props.alignment),\n      accent: getRandomValue(this.props.accent),\n      airiness: getRandomValue(this.props.airiness),\n      pitch: getRandomValue(this.props.pitch),\n      cadence: getRandomValue(this.props.cadence),\n      characteristic1: getRandomValue(this.props.characteristics),\n      characteristic2: getRandomValue(this.props.characteristics),\n      instinct: getRandomValue(this.props.instincts),\n      knack: getRandomValue(this.props.knacks)\n    }\n  } \n\n  respin = () => {this.setState(this.spinTraits())}\n\n  render() {\n    const { \n      accent,\n      alignment,\n      name, \n      gender, \n      race, \n      age,\n      hairColor,\n      hairStyle,\n      hairTexture, \n      height, \n      facialFeatures, \n      airiness, \n      cadence, \n      pitch,\n      characteristic1, \n      characteristic2, \n      positiveTrait, \n      neutralTrait,\n      negativeTrait,\n      instinct, \n      knack } = this.state;\n      let description = height + \" for an \" + age + \" \" + race;\n      let hair = `${hairStyle}, ${hairTexture}, ${hairColor} Hair`\n      let personalityFields = [\n        [\"Normal Behavior\", positiveTrait],\n        [\"Drunk or Tired\", neutralTrait],\n        [\"Angry or Stressed\", negativeTrait]\n      ];\n      let speechFields = [\n        [\"Accent\", accent],\n        [\"Pitch\", `${pitch} for a ${gender} ${race}`],\n        [\"Airiness\", airiness],\n        [\"Cadence\", cadence]\n      ];\n      let characteristicFields = \n        [\n          characteristic1,\n          characteristic2,\n        ];\n\n\t\treturn (\n      <div className=\"container-fluid\">\n\n        <div class=\"more-info details-more-info\">\n          <div class=\"mon-stat-block__name\">\n            NPC Spinner\n          </div>\n          <div class=\"detail-content\">\n            <div class=\"mon-stat-block\">\n              <div class=\"mon-stat-block__header\">\n                <div class=\"mon-stat-block__name\">\n                    {name}\n                </div>\n                <div class=\"mon-stat-block__meta\">{age} {gender} {race}</div>\n              </div>\n              <div class=\"mon-stat-block__separator\">\n                <img class=\"mon-stat-block__separator-img\" alt=\"\" src=\"https://media-waterdeep.cursecdn.com/file-attachments/0/579/stat-block-header-bar.svg\" />\n              </div>\n              <div class=\"mon-stat-block__attributes\">\n                <SimpleValue title=\"Hair\" text={hair} />\n                <SimpleValue title=\"Features\" text={facialFeatures} />\n                <SimpleValue title=\"Description\" text={description} />\n                <SimpleValue title=\"City\" text=\"\" />\n                <SimpleValue title=\"Occupation\" text=\"\" />\n              </div>\n              <div class=\"mon-stat-block__attributes\">\n                <div class=\"mon-stat-block__separator\">\n                  <img class=\"mon-stat-block__separator-img\" alt=\"\" src=\"https://media-waterdeep.cursecdn.com/file-attachments/0/579/stat-block-header-bar.svg\" />\n                </div>\n                <ListValue title=\"Speech\" fields={speechFields} />\n                <div class=\"mon-stat-block__separator\">\n                  <img class=\"mon-stat-block__separator-img\" alt=\"\" src=\"https://media-waterdeep.cursecdn.com/file-attachments/0/579/stat-block-header-bar.svg\" />\n                </div>\n              </div>\n              <div class=\"mon-stat-block__tidbits\">\n                <TraitList title=\"Characteristics\" fields={characteristicFields} />\n                <SimpleValue title={Object.keys(alignment)[0]} text={alignment[Object.keys(alignment)[0]]} />\n                <SimpleValue title=\"Instinct\" text={instinct} />\n                <SimpleValue title=\"Knack\" text={knack} />\n                <ListValue title=\"Personality\" fields={personalityFields} />\n              </div>\n              <div class=\"mon-stat-block__separator\">\n                <img class=\"mon-stat-block__separator-img\" alt=\"\" src=\"https://media-waterdeep.cursecdn.com/file-attachments/0/579/stat-block-header-bar.svg\" />\n              </div>\n            </div>\n          </div>\n          <button type=\"button\" className=\"btn btn-primary\"\n                onClick={this.respin}>Generate new traits</button>\n        </div>\n      </div>\n\t\t);\n\n\t};\n};\n\n\n\nApp.propTypes = {\n  npcs: PropTypes.number,\n  maxNpcs: PropTypes.number,\n  names: PropTypes.arrayOf(PropTypes.string),\n  instincts: PropTypes.arrayOf(PropTypes.string),\n  knacks: PropTypes.arrayOf(PropTypes.string),\n  speech: PropTypes.arrayOf(PropTypes.string),\n  hairColor: PropTypes.arrayOf(PropTypes.string),\n  hairStyle: PropTypes.arrayOf(PropTypes.string),\n  hairTexture: PropTypes.arrayOf(PropTypes.string),\n  facialFeatures: PropTypes.arrayOf(PropTypes.string),\n  bodyLocations: PropTypes.arrayOf(PropTypes.string),\n  personality: PropTypes.arrayOf(PropTypes.string)\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}